// Prisma schema for NextAuth + custom credentials
// Generator and datasource
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth models per official schema with additions
model User {
  id                 String   @id @default(cuid())
  name               String?
  email              String?  @unique
  emailVerified      DateTime?
  image              String?

  // Custom fields
  registrationNumber String?  @unique
  phoneNumber        String?
  passwordHash       String?
  isAdmin            Boolean  @default(false)

  accounts           Account[]
  sessions           Session[]
  requests           Request[]

  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @map("refreshToken")
  access_token      String?  @map("accessToken")
  expires_at        Int?     @map("expiresAt")
  token_type        String?  @map("tokenType")
  scope             String?
  id_token          String?  @map("idToken")
  session_state     String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Hostel swap request model
model Request {
 id            String   @id @default(cuid())
 userId        String
 user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 currentHostel String
 currentBlock  String?
 currentFloor  String?
 currentRoom   String?
 desiredHostel String
 desiredBlock  String?
 desiredFloor  String?
 desiredRoom   String?
 message       String?
 status        String   @default("open") // open, matched, closed
 createdAt     DateTime @default(now())
 updatedAt     DateTime @updatedAt

 @@index([status, createdAt])
}
